@page "/Register"
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Register</h3>

<EditForm @key="registerModel" Model="@registerModel" OnValidSubmit="RegisterUser" FormName="RegisterForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="fullNameInput">Full Name:</label>
        <InputText id="fullNameInput" @bind-Value="registerModel.FullName" />
    </div>
    
    <div>
        <label for="emailInput">Email:</label>
        <InputText id="emailInput" @bind-Value="registerModel.Email" />
    </div>

    <div>
        <label for="passwordInput">Password:</label>
        <InputText id="passwordInput" @bind-Value="registerModel.Password" type="password" />
    </div>

    <button type="submit">Register</button>
</EditForm>

<p style="color:red">@Message</p>


@code {
    private RegisterModel registerModel = new RegisterModel
    {
        FullName = string.Empty,
        Email = string.Empty,
        Password = string.Empty
    };
    private string Message = "";

    private async Task RegisterUser()
    {
        Console.WriteLine("➡️ Entrou em RegisterUser"); // debug
        var response = await Http.PostAsJsonAsync("api/account/register", registerModel);

        if (response.IsSuccessStatusCode)
        {
            Message = "Registrado com sucesso!";
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            var error = await response.Content.ReadAsStringAsync();
            Message = "Erro: " + error;
        }
    }

    public class RegisterModel
    {
        [Required(ErrorMessage = "O campo Nome é obrigatório")]
        public string FullName { get; set; } = string.Empty;
        
        [Required(ErrorMessage = "O campo Email é obrigatório")]
        [EmailAddress(ErrorMessage = "Digite um email válido")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "O campo Senha é obrigatório")]
        [MinLength(6, ErrorMessage = "A senha deve ter no mínimo 6 caracteres")]
        public string Password { get; set; } = string.Empty;
    }
}